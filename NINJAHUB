local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("PRO HUB FRFR", "Midnight")
local Main = Window:NewTab("Main")
local Misc = Window:NewTab("Misc")

local Section1 = Main:NewSection("Main")
local Section2 = Misc:NewSection("Misc")


Section2:NewKeybind("Hide GUI", "hids the gui", Enum.KeyCode.RightControl, function()
	Library:ToggleUI()
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Player = Players.LocalPlayer

Section1:NewButton("Fast Respawn", "respawns you faster", function()

Player.PlayerGui.UI.HUD.Visible = true

local args = {
    [1] = "Core",
    [2] = "LoadCharacter",
    [3] = {}
}

game:GetService("ReplicatedStorage").ReplicatorNoYield:FireServer(unpack(args))

wait(0.5)

local args = {
    [1] = "Main",
    [2] = "LoadCharacter"
}

game:GetService("ReplicatedStorage").ReplicatorNoYield:FireServer(unpack(args))

Workspace.CurrentCamera.CameraSubject = Player.Character
end)

local isAnchored = false

local function applyAnchoringState()
    Player.Character:WaitForChild("HumanoidRootPart").Anchored = isAnchored
    Player.Character:WaitForChild("RightArm").Anchored = isAnchored
    Player.Character:WaitForChild("LeftArm").Anchored = isAnchored
    Player.Character:WaitForChild("RightLeg").Anchored = isAnchored
    Player.Character:WaitForChild("LeftLag").Anchored = isAnchored
    Player.Character:WaitForChild("Head").Anchored = isAnchored
end

local function onCharacterAdded(char)
    char:WaitForChild("Humanoid").Died:Connect(function()
        isAnchored = true
        applyAnchoringState()
    end)
end

Player.CharacterAdded:Connect(onCharacterAdded)
if Player.Character then
    onCharacterAdded(Player.Character)
end

Section1:NewToggle("Anchor/UnAnchor", "anchor/unanchors ur char", function(state)
    if state then
        isAnchored = true
        print("Anchoring...")
        while isAnchored do -- loop while the toggle is on
            applyAnchoringState()
            wait() -- wait for the next frame
        end
        print("Anchoring stopped.")
    else
        isAnchored = false
        print("Unanchoring...")
        applyAnchoringState()
        print("Unanchoring stopped.")
    end
end)

local autoResetEnabled = false

Section1:NewToggle("Auto Reset", "Auto reset when stamina is less than 30", function(state)
    autoResetEnabled = true
	if state then
        while autoResetEnabled do
            wait(0.5)
            if Players.Player.PlayerGui.UI.HUD.Bars.Stamina.AbsoluteSize.X < 30  then
                wait(0.5)
                pcall(function()
                    Player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Dead)
                end)
                print("Executed!")
            end

            wait(10)

            Player.PlayerGui.UI.HUD.Visible = true

            local args = {
                [1] = "Core",
                [2] = "LoadCharacter",
                [3] = {}
            }

            game:GetService("ReplicatedStorage").ReplicatorNoYield:FireServer(unpack(args))

            wait(0.5)

            local args = {
                [1] = "Main",
                [2] = "LoadCharacter"
            }

            game:GetService("ReplicatedStorage").ReplicatorNoYield:FireServer(unpack(args))

            wait(3)

            pcall(function()
                Workspace.CurrentCamera.CameraSubject = Player.Character
            end)
        end
    else
        autoResetEnabled = false
        print("Disabled!")
    end
end)

local VirtualInputManager = game:GetService("VirtualInputManager")
local Numbers = {
    49,
    50,
    51,
    52
}

local keypressloop = false
Section1:NewToggle("Auto Press Keys", "auto press skills", function(state)
    if state then
        keypressloop = true
        while keypressloop do
            for i, v in pairs(Numbers) do
                VirtualInputManager:SendKeyEvent(true, v, false, game)
                wait(0.5)
                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 1)
                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 1) 
                wait(0.5)
            end
        end
    else
	keypressloop = false
    end
end)

local CFrames = {
    ["1"] = CFrame.new(-987, 502, -1102),
    ["2"] = CFrame.new(-289, 557, -1343),
    ["3"] = CFrame.new(321, 583, -1442),
    ["4"] = CFrame.new(486, 549, -1316),
    ["5"] = CFrame.new(1195, 562, -826)
}

local tploop = false
Section1:NewToggle("Auto Teleport", "auto auto teleports you to a certain position", function(state)
    if state then
        tploop = true
        while true do
    if Player.Character then
        for i, v in pairs(CFrames) do
            if i == tostring(math.random(1, 5)) then
                Player.Character:WaitForChild("HumanoidRootPart").CFrame = v
            end 
            wait(0.5)
        end 
    end
end
    else
        tploop = false
        print("Disabled!")
    end
end)

Section1:NewButton("Destroy MainMenu", "Removes MainMenu", function()
Player.PlayerGui.UI.MainMenu:Destroy()
end)

Section1:NewButton("Destroy DeathScreen", "removes DeathScreen", function()
game:GetService("ReplicatedStorage").DeathScreen:Destroy()
end)
